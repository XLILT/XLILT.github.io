{"name":"Xlilt.GitHub.io","tagline":"Personal Blog","body":"### 完全不知道怎么玩，先放到这里\r\n\r\n#### 1、关于C++ STL 容器（包括string）内存的释放\r\n\t\t如果不进行强制释放，内存会被占据直到容器生命周期结束（甚至占据非自己内存\r\n\t不释放，此处经测试可能为内存碎片会导致不能释放）。用如下代码段进行强制释放。\r\n\r\n    obj_container...\r\n    {\r\n        tmp_container.swap(obj_container);\r\n    }\r\n\r\n---\r\n\r\n##### 2、关于C++内联函数\r\n\t渣书上面能找到的这里就不提了。\r\n\t这里要说的是，当在头文件中声明成员函数，却在多个实现文件中实现（均实现为\r\n\tinline函数）的情况。\r\n\t这里存在2个问题：\r\n\t（1）、编译器是否会报告重复定义或者找不到实现？\r\n\t\t针对 gcc 版本 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC)，测试结果如下。\r\n\t\t首先，绝对不会报告重复定义错误。\r\n\t\t其次，有可能报告找不到实现。\r\n\t\t\r\n\t（2）、如果不会重复定义，那么TMD那到底会使用哪个或者哪些实现呢？\r\n\t\t根据情况而定。\r\n\t\t看到这里，是不是有种感觉这是在逗你玩的感觉。并非。我的测试demo表明，你实现\r\n\tinline的位置，并非为绑定具体实现到声明的位置。\r\n\t他（编译器）会在按连接目标文件的次序，当连接到第一个使用该函数的目标文件，从该\r\n\t文件中查找并绑定该函数。之后使用该函数，无论\t是否出现其他实现，均不会影响该绑定。\r\n\t\t按照此原则，若第一次出现使用该函数时，对应目标文件中无实现，则会报告找不到\r\n\t实现（基础知识嘛，对吧）。\r\n\r\n---\r\n#\t2015年总结\r\n##\t楔子\r\n\t\t终于在放假两天后，得到了难得的安宁。是时候坐下来码码字，写点什么了。\t\t\r\n\t\t我是个懒人，不喜欢写太多的字。从来都喜欢尽量用最简单的字把事情说清楚。这一点从我不喜欢写专利以获得\r\n\t一些外快就可以看得出来。不过不管是出于仪式，还是真的想写点东西出来给关心我的人或者以后的自己看看还是很\r\n\t有必要的。\r\n\t毕竟我是个不太习惯用言语表达自己感情的人，也许简简单单的文字更能表达我的心声。\r\n##\t我是怎么度过这一年\r\n###\t生活\r\n\t\t回想这一年，发生了好多事情。可一直忙于工作、学习的我竟然什么都想不起来或者说什么都不关心，尽管她与\r\n\t我息息相关。\r\n\t\t这一年我一直与自己的父母住在一起。\r\n\t\t回想起过完去年春节刚回到武汉那天，老爸开车载着我和老妈还有亲戚几个过来。历历在目。那时候去的还是理\r\n\t工大学那边的小房子。\r\n\t\t关于\t这个小房子，我的回忆就太多了。\r\n\t\t她目睹了我这几年的变化。\r\n\t\t她见证了我为了一份工作东奔西跑，到处碰灰。好在，我有与生俱来的骄傲。从来都不怀疑自己，坚信只要自己\r\n\t努力就能改变我想改变的。安静的学习技能，应付笔试面试。\r\n\t\tCQP是个善良友好聪明的人。在我最需要帮助的时候，他帮助了我。或者说，给了我一次机会。他给了我一次机会\r\n\t让我证明，其实我也可以写出漂亮好用的程序。前提只是，去掉不属于我的年龄的任性。\r\n\t\t来到DY，认识了好多可爱友好的同事。当然还有平易近人的BOSS张。\r\n\t\t当然其他的，都算作工作的事情了。\r\n\t\t她见证了我从那个幼稚的少年变成了虽幼稚但会好一些的少年。\r\n\t\t住在她的羽翼里面，得益于地理位置的优势。我还能得空的时候去跑跑步，踢踢球。适当锻炼一下身体。\r\n\t\t在那个冷却美好的东夜，我高兴的学会了吹奏华胥引。我为什么突然学吹箫，只其中的快乐恐怕只有自己知道了。\r\n\t\t她也看见了那个傻瓜，冒着大学纷飞去瑜伽山上怀恋。这样的事情，以后再也不会发生吧。\r\n\t\t可惜好景不长，该离开的还是会离开。房东卖掉了自己的房子，被迫离开。\r\n\t\t我想我还会想起她们吧。\r\n\t\t后来，住到石牌岭的小巷子。\r\n\t\t这里也是开心的和表弟们吹过烧烤，当街（晚上）尿尿。哈哈，过得也挺开心的。是的，也感谢SZ带着我去华师学\r\n\t会了游泳。\r\n\t当然也发生了一些愉快的事情，认识了可爱的人们。\r\n\t\t好景也不长，没住多久也搬到新房子了。再也不能去理工大跑步了，再也不能去华师游泳了。\r\n\t\t还在，一直有父母的陪伴。\r\n\t\t住过来没多久，我愉快的学会了开车。怀恋哪些一些学车的学员们，还有教练们。\r\n###\t工作\r\n\t\t很充实，很累。\r\n\t\t这一年，没有太多想说的。懂得知识越来越多，对应的眼睛越来月差劲。身子越来越差。\r\n\t\t很喜欢同事们，都那么讲道理，那么可爱。虽然大家都很贪吃，哈哈哈。\r\n\t\t不得不说，下午茶与其说是充饥，不然说看看大家欢乐的吃免费午餐多开心。\r\n###\t感情\r\n\t\t我是矫情的人，想发展一段感情对我来说太难。\r\n\t\t我对自己要求是严格的，我对自己另一半也一样。\r\n\t\t我是个缺心眼的人，喜欢上一个人太难。让他也喜欢我，就更难。\r\n\t\t我只是好恨。为什么让我知道世间有那么美好的爱情，却不肯让我得到。如果我从来都不懂爱，随便找个好姑娘娶了\r\n\t也就凑合过了。\r\n\t我不知道自己还能抗多久，我不想让亲人担心失望。而我也不想违心。\r\n\t\t感情这个结，对于陷进去的人。注定是个生死劫吧。我只能祈求她快点过去。\r\n##\t关于这一年的想法\r\n\t\t生活太缺乏健康的元素。我要好好出去走走，做个健康的小青年。\r\n\t\t工作好累，却不如我想的那样收获多。我不太满意。\r\n\t\t感情好累，我找不到方向。\r\n##\t新年的希望和规划\r\n\t\t首先，一定要好好的生活。有一个健康的身体。\r\n\t\t其次，工作要有计划安排，多一些有效沟通。\r\n\t\t最后，希望自己能不再迷茫。做一个坚强、勇敢、勤劳、友善、大度的人。得一人心。\r\n##\t结语\r\n\t\t2015年，一切安好。我很知足。2016，我会更加努力。过好自己的生活，陪伴好家人。\r\n##\t番外\r\n\t\t年会，其实我真醉了。可能有些伤感，外加身子不适吧。心却不曾醉过。\r\n---\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you're using GitHub for Mac or GitHub for Windows, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}